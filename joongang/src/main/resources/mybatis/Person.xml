<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Person">
  <!-- Use type aliases to avoid typing the full classname every time. -->
  <resultMap id="PersonResult" type="Person">
  	<result property=""    column=""/>
    <result property="empno"     column="empno"/>
    <result property="ename"     column="ename"/>
    <result property="job"       column="job"/>
    <result property="mgr"       column="mgr"/>
    <result property="hiredate"  column="hiredate"/>
    <result property="sal"       column="sal"/>
    <result property="comm"      column="comm"/>
    <result property="deptno"    column="deptno"/>
  </resultMap>
   <select id="login" parameterType="Person" resultType="int">
      select Count(*) from person where pid=#{pid} and ppw=#{ppw}	
   </select>
     <select id="aliveChk" parameterType="Person" resultType="String">
      select alive from person where pid=#{pid} and ppw=#{ppw}	
   </select>
 
   <select id="gubun" parameterType="Person" resultType="Person">
   	 select * from person where pid=#{pid} and ppw=#{ppw} and alive='A'
   </select>
   <insert id="student_join" parameterType="Person"> 
     insert into person(gubun, yymm, pnum, pid, ppw, pbirth, age, pemail, paddress, pname, ptel, pgender, class_num, alive, reg_date)
     	values(1,(select to_number(to_char(sysdate, 'yymm'))yymm from dual),SEQ_STUDENT.NEXTVAL, #{pid}, #{ppw}, #{pbirth}, #{age}, #{pemail}, #{paddress}, #{pname}, #{ptel}, #{pgender}, #{class_num}, 'R',sysdate)
   </insert>
   
   <select id="TKdeptName" parameterType="int"	 resultType="java.lang.String">
        select * from person where pnum = #{pnum} 
  </select>  
   
   <update id="update_s" parameterType="Person">
	 update person set ppeval = #{ppeval}, pteval= #{pteval} where pnum = #{pnum} 
  </update>
  
</mapper>
